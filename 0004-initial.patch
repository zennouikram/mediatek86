From c92d740af01ab14b37cdc3ce50b6d4a7ddc35bf6 Mon Sep 17 00:00:00 2001
From: florent Richard <florent.r08@live.fr>
Date: Fri, 16 Apr 2021 11:47:54 +0200
Subject: [PATCH] =?UTF-8?q?Cr=C3=A9ation=20de=20la=20connexion=20=C3=A0=20?=
 =?UTF-8?q?la=20BDD=20et=20cr=C3=A9ation=20des=20classes=20m=C3=A9tiers=20?=
 =?UTF-8?q?dans=20le=20packages=20modele?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 MediaTek86.sln                          |  12 +-
 MediaTek86/App.config                   |  14 +-
 MediaTek86/MediaTek86.csproj            |  55 +++++++-
 MediaTek86/Program.cs                   |   2 +-
 MediaTek86/connexion/ConnexionBDD.cs    | 169 ++++++++++++++++++++++++
 MediaTek86/dal/AccesDonnees.cs          |  18 +++
 MediaTek86/modele/Absence.cs            |  32 +++++
 MediaTek86/modele/Motif.cs              |  26 ++++
 MediaTek86/modele/Personnel.cs          |  38 ++++++
 MediaTek86/modele/Responsable.cs        |  26 ++++
 MediaTek86/modele/Service.cs            |  45 +++++++
 MediaTek86/packages.config              |  14 ++
 MediaTek86/vue/GererAbsence.cs          |   4 +
 MediaTek86/vue/ListePersonnel.cs        |   4 +
 MediaTek86/vue/ModificationAbsence.cs   |   4 +
 MediaTek86/vue/ModificationPersonnel.cs |   4 +
 MediaTek86/vue/SeConnecter.cs           |   9 +-
 17 files changed, 466 insertions(+), 10 deletions(-)
 create mode 100644 MediaTek86/connexion/ConnexionBDD.cs
 create mode 100644 MediaTek86/dal/AccesDonnees.cs
 create mode 100644 MediaTek86/modele/Absence.cs
 create mode 100644 MediaTek86/modele/Motif.cs
 create mode 100644 MediaTek86/modele/Personnel.cs
 create mode 100644 MediaTek86/modele/Responsable.cs
 create mode 100644 MediaTek86/modele/Service.cs
 create mode 100644 MediaTek86/packages.config

diff --git a/MediaTek86.sln b/MediaTek86.sln
index b551d33..96b7a4a 100644
--- a/MediaTek86.sln
+++ b/MediaTek86.sln
@@ -3,7 +3,7 @@ Microsoft Visual Studio Solution File, Format Version 12.00
 # Visual Studio Version 16
 VisualStudioVersion = 16.0.30503.244
 MinimumVisualStudioVersion = 10.0.40219.1
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "MediaTek86", "MediaTek86\MediaTek86.csproj", "{CDB42E81-CCDE-41BD-9918-06261E142147}"
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "MediaTek86", "MediaTek86\MediaTek86.csproj", "{60872AAE-2A8E-4BC4-88CD-FE03073E119A}"
 EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution
@@ -11,15 +11,15 @@ Global
 		Release|Any CPU = Release|Any CPU
 	EndGlobalSection
 	GlobalSection(ProjectConfigurationPlatforms) = postSolution
-		{CDB42E81-CCDE-41BD-9918-06261E142147}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{CDB42E81-CCDE-41BD-9918-06261E142147}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{CDB42E81-CCDE-41BD-9918-06261E142147}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{CDB42E81-CCDE-41BD-9918-06261E142147}.Release|Any CPU.Build.0 = Release|Any CPU
+		{60872AAE-2A8E-4BC4-88CD-FE03073E119A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{60872AAE-2A8E-4BC4-88CD-FE03073E119A}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{60872AAE-2A8E-4BC4-88CD-FE03073E119A}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{60872AAE-2A8E-4BC4-88CD-FE03073E119A}.Release|Any CPU.Build.0 = Release|Any CPU
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE
 	EndGlobalSection
 	GlobalSection(ExtensibilityGlobals) = postSolution
-		SolutionGuid = {EFF8ECC7-0018-4BAD-A96E-4BFBCCBD0A1D}
+		SolutionGuid = {78FAC4AC-3D1F-47AC-9328-7C786AC117EF}
 	EndGlobalSection
 EndGlobal
diff --git a/MediaTek86/App.config b/MediaTek86/App.config
index 56efbc7..2327248 100644
--- a/MediaTek86/App.config
+++ b/MediaTek86/App.config
@@ -1,6 +1,18 @@
-﻿<?xml version="1.0" encoding="utf-8" ?>
+﻿<?xml version="1.0" encoding="utf-8"?>
 <configuration>
     <startup> 
         <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
     </startup>
+  <runtime>
+    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
+      <dependentAssembly>
+        <assemblyIdentity name="System.Buffers" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
+        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
+      </dependentAssembly>
+      <dependentAssembly>
+        <assemblyIdentity name="System.Memory" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
+        <bindingRedirect oldVersion="0.0.0.0-4.0.1.1" newVersion="4.0.1.1" />
+      </dependentAssembly>
+    </assemblyBinding>
+  </runtime>
 </configuration>
\ No newline at end of file
diff --git a/MediaTek86/MediaTek86.csproj b/MediaTek86/MediaTek86.csproj
index e7f8d00..ee5afd9 100644
--- a/MediaTek86/MediaTek86.csproj
+++ b/MediaTek86/MediaTek86.csproj
@@ -33,8 +33,48 @@
     <WarningLevel>4</WarningLevel>
   </PropertyGroup>
   <ItemGroup>
+    <Reference Include="BouncyCastle.Crypto, Version=1.8.5.0, Culture=neutral, PublicKeyToken=0e99375e54769942">
+      <HintPath>..\packages\BouncyCastle.1.8.5\lib\BouncyCastle.Crypto.dll</HintPath>
+    </Reference>
+    <Reference Include="Google.Protobuf, Version=3.11.4.0, Culture=neutral, PublicKeyToken=a7d26565bac4d604, processorArchitecture=MSIL">
+      <HintPath>..\packages\Google.Protobuf.3.11.4\lib\net45\Google.Protobuf.dll</HintPath>
+    </Reference>
+    <Reference Include="K4os.Compression.LZ4, Version=1.1.11.0, Culture=neutral, PublicKeyToken=2186fa9121ef231d, processorArchitecture=MSIL">
+      <HintPath>..\packages\K4os.Compression.LZ4.1.1.11\lib\net46\K4os.Compression.LZ4.dll</HintPath>
+    </Reference>
+    <Reference Include="K4os.Compression.LZ4.Streams, Version=1.1.11.0, Culture=neutral, PublicKeyToken=2186fa9121ef231d, processorArchitecture=MSIL">
+      <HintPath>..\packages\K4os.Compression.LZ4.Streams.1.1.11\lib\net46\K4os.Compression.LZ4.Streams.dll</HintPath>
+    </Reference>
+    <Reference Include="K4os.Hash.xxHash, Version=1.0.6.0, Culture=neutral, PublicKeyToken=32cd54395057cec3, processorArchitecture=MSIL">
+      <HintPath>..\packages\K4os.Hash.xxHash.1.0.6\lib\net46\K4os.Hash.xxHash.dll</HintPath>
+    </Reference>
+    <Reference Include="MySql.Data, Version=8.0.23.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d, processorArchitecture=MSIL">
+      <HintPath>..\packages\MySql.Data.8.0.23\lib\net452\MySql.Data.dll</HintPath>
+    </Reference>
+    <Reference Include="Renci.SshNet, Version=2020.0.0.0, Culture=neutral, PublicKeyToken=1cee9f8bde3db106, processorArchitecture=MSIL">
+      <HintPath>..\packages\SSH.NET.2020.0.0\lib\net40\Renci.SshNet.dll</HintPath>
+    </Reference>
     <Reference Include="System" />
+    <Reference Include="System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
+      <HintPath>..\packages\System.Buffers.4.5.1\lib\net461\System.Buffers.dll</HintPath>
+    </Reference>
+    <Reference Include="System.ComponentModel" />
+    <Reference Include="System.ComponentModel.DataAnnotations" />
+    <Reference Include="System.Configuration" />
+    <Reference Include="System.Configuration.Install" />
     <Reference Include="System.Core" />
+    <Reference Include="System.Management" />
+    <Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
+      <HintPath>..\packages\System.Memory.4.5.3\lib\netstandard2.0\System.Memory.dll</HintPath>
+    </Reference>
+    <Reference Include="System.Numerics" />
+    <Reference Include="System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
+      <HintPath>..\packages\System.Numerics.Vectors.4.4.0\lib\net46\System.Numerics.Vectors.dll</HintPath>
+    </Reference>
+    <Reference Include="System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
+      <HintPath>..\packages\System.Runtime.CompilerServices.Unsafe.4.5.2\lib\netstandard2.0\System.Runtime.CompilerServices.Unsafe.dll</HintPath>
+    </Reference>
+    <Reference Include="System.Transactions" />
     <Reference Include="System.Xml.Linq" />
     <Reference Include="System.Data.DataSetExtensions" />
     <Reference Include="Microsoft.CSharp" />
@@ -44,8 +84,21 @@
     <Reference Include="System.Net.Http" />
     <Reference Include="System.Windows.Forms" />
     <Reference Include="System.Xml" />
+    <Reference Include="Ubiety.Dns.Core, Version=2.2.1.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d, processorArchitecture=MSIL">
+      <HintPath>..\packages\MySql.Data.8.0.23\lib\net452\Ubiety.Dns.Core.dll</HintPath>
+    </Reference>
+    <Reference Include="Zstandard.Net, Version=1.1.7.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d, processorArchitecture=MSIL">
+      <HintPath>..\packages\MySql.Data.8.0.23\lib\net452\Zstandard.Net.dll</HintPath>
+    </Reference>
   </ItemGroup>
   <ItemGroup>
+    <Compile Include="connexion\ConnexionBDD.cs" />
+    <Compile Include="dal\AccesDonnees.cs" />
+    <Compile Include="modele\Absence.cs" />
+    <Compile Include="modele\Motif.cs" />
+    <Compile Include="modele\Personnel.cs" />
+    <Compile Include="modele\Responsable.cs" />
+    <Compile Include="modele\Service.cs" />
     <Compile Include="vue\ModificationAbsence.cs">
       <SubType>Form</SubType>
     </Compile>
@@ -103,6 +156,7 @@
     <EmbeddedResource Include="vue\SeConnecter.resx">
       <DependentUpon>SeConnecter.cs</DependentUpon>
     </EmbeddedResource>
+    <None Include="packages.config" />
     <None Include="Properties\Settings.settings">
       <Generator>SettingsSingleFileGenerator</Generator>
       <LastGenOutput>Settings.Designer.cs</LastGenOutput>
@@ -118,7 +172,6 @@
   </ItemGroup>
   <ItemGroup>
     <Folder Include="controle\" />
-    <Folder Include="modele\" />
   </ItemGroup>
   <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
 </Project>
\ No newline at end of file
diff --git a/MediaTek86/Program.cs b/MediaTek86/Program.cs
index 574f963..d41d00b 100644
--- a/MediaTek86/Program.cs
+++ b/MediaTek86/Program.cs
@@ -17,7 +17,7 @@ namespace MediaTek86
         {
             Application.EnableVisualStyles();
             Application.SetCompatibleTextRenderingDefault(false);
-            Application.Run(new frmGererAbsence());
+            Application.Run(new frmSeConnecter());
         }
     }
 }
diff --git a/MediaTek86/connexion/ConnexionBDD.cs b/MediaTek86/connexion/ConnexionBDD.cs
new file mode 100644
index 0000000..2d8094f
--- /dev/null
+++ b/MediaTek86/connexion/ConnexionBDD.cs
@@ -0,0 +1,169 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using System.Windows.Forms;
+using MySql.Data.MySqlClient;
+
+namespace MediaTek86.connexion
+{
+    /// <summary>
+    /// Connexion à la base de données et exécution des requêtes
+    /// </summary>
+    public class ConnexionBDD
+    {
+        /// <summary>
+        /// Unique instance de la classe
+        /// </summary>
+        private static ConnexionBDD instance = null;
+        /// <summary>
+        /// objet de connexion à la BDD à partir d'une chaîne de connexion
+        /// </summary>
+        private MySqlConnection connection;
+        /// <summary>
+        /// objet pour exécuter une requête SQL
+        /// </summary>
+        private MySqlCommand command;
+        /// <summary>
+        /// objet contenant le résultat d'une requête "select" (curseur)
+        /// </summary>
+        private MySqlDataReader reader;
+
+        /// <summary>
+        /// Constructeur privé pour créer la connexion à la BDD et l'ouvrir
+        /// </summary>
+        /// <param name="stringConnect">chaine de connexion</param>
+        private ConnexionBDD(string stringConnect)
+        {
+            try
+            {
+                connection = new MySqlConnection(stringConnect);
+                connection.Open();
+            }
+            catch (Exception e)
+            {
+                Console.WriteLine(e.Message);
+                Application.Exit();
+            }
+        }
+
+        /// <summary>
+        /// Crée une instance unique de la classe
+        /// </summary>
+        /// <param name="stringConnect">chaine de connexion</param>
+        /// <returns>instance unique de la classe</returns>
+        public static ConnexionBDD GetInstance(string stringConnect)
+        {
+            if (instance is null)
+            {
+                instance = new ConnexionBDD(stringConnect);
+            }
+            return instance;
+        }
+
+        /// <summary>
+        /// Exécution d'une requête autre que "select"
+        /// </summary>
+        /// <param name="stringQuery">requête autre que select</param>
+        /// <param name="parameters">dictionnire contenant les parametres</param>
+        public void ReqUpdate(string stringQuery, Dictionary<string, object> parameters)
+        {
+            try
+            {
+                command = new MySqlCommand(stringQuery, connection);
+                if (!(parameters is null))
+                {
+                    foreach (KeyValuePair<string, object> parameter in parameters)
+                    {
+                        command.Parameters.Add(new MySqlParameter(parameter.Key, parameter.Value));
+                    }
+                }
+                command.Prepare();
+                command.ExecuteNonQuery();
+            }
+            catch (Exception e)
+            {
+                Console.WriteLine(e.Message);
+            }
+        }
+
+        /// <summary>
+        /// Exécute une requête type "select" et valorise le curseur
+        /// </summary>
+        /// <param name="stringQuery">requête select</param>
+        public void ReqSelect(string stringQuery, Dictionary<string, object> parameters)
+        {
+            try
+            {
+                command = new MySqlCommand(stringQuery, connection);
+                if (!(parameters is null))
+                {
+                    foreach (KeyValuePair<string, object> parameter in parameters)
+                    {
+                        command.Parameters.Add(new MySqlParameter(parameter.Key, parameter.Value));
+                    }
+                }
+                command.Prepare();
+                reader = command.ExecuteReader();
+            }
+            catch (Exception e)
+            {
+                Console.WriteLine(e.Message);
+            }
+        }
+
+        /// <summary>
+        /// Tente de lire la ligne suivante du curseur
+        /// </summary>
+        /// <returns>false si fin de curseur atteinte</returns>
+        public bool Read()
+        {
+            if (reader is null)
+            {
+                return false;
+            }
+            try
+            {
+                return reader.Read();
+            }
+            catch
+            {
+                return false;
+            }
+        }
+
+        /// <summary>
+        /// Retourne le contenu d'un champ dont le nom est passé en paramètre
+        /// </summary>
+        /// <param name="nameField">nom du champ</param>
+        /// <returns>valeur du champ</returns>
+        public object Field(string nameField)
+        {
+            if (reader is null)
+            {
+                return null;
+            }
+            try
+            {
+                return reader[nameField];
+            }
+            catch
+            {
+                return null;
+            }
+        }
+
+        /// <summary>
+        /// Fermeture du curseur
+        /// </summary>
+        public void Close()
+        {
+            if (!(reader is null))
+            {
+                reader.Close();
+            }
+        }
+
+    }
+}
diff --git a/MediaTek86/dal/AccesDonnees.cs b/MediaTek86/dal/AccesDonnees.cs
new file mode 100644
index 0000000..b22971c
--- /dev/null
+++ b/MediaTek86/dal/AccesDonnees.cs
@@ -0,0 +1,18 @@
+﻿using MediaTek86.connexion;
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace MediaTek86.dal
+{
+    public class AccesDonnees
+    {
+        /// <summary>
+        /// chaine de connexion à la bdd
+        /// </summary>
+        private static string connectionString = "server=localhost;user id=admin;password=wHIwAcI3DijYBRvO;database=mediatek86;SslMode=none";
+
+    }
+}
diff --git a/MediaTek86/modele/Absence.cs b/MediaTek86/modele/Absence.cs
new file mode 100644
index 0000000..0da536e
--- /dev/null
+++ b/MediaTek86/modele/Absence.cs
@@ -0,0 +1,32 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace MediaTek86.modele
+{
+    class Absence
+    {
+        // Déclaration des propriétés
+        private int idpersonnel;
+        private string datedebut;
+        private string datefin;
+        private int idmotif;
+
+        /// <summary>
+        /// Constructeur : valorise les propriétés
+        /// </summary>
+        /// <param name="idpersonnel"></param>
+        /// <param name="datedebut"></param>
+        /// <param name="datefin"></param>
+        /// <param name="idmotif"></param>
+        public Absence(int idpersonnel, string datedebut, string datefin, int idmotif)
+        {
+            this.idpersonnel = idpersonnel;
+            this.datedebut = datedebut;
+            this.datefin = datefin;
+            this.idmotif = idmotif;
+        }
+    }
+}
diff --git a/MediaTek86/modele/Motif.cs b/MediaTek86/modele/Motif.cs
new file mode 100644
index 0000000..0762da8
--- /dev/null
+++ b/MediaTek86/modele/Motif.cs
@@ -0,0 +1,26 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace MediaTek86.modele
+{
+    class Motif
+    {
+        // Déclaration des propriétés
+        private int idmotif;
+        private string libelle;
+
+        /// <summary>
+        /// Constructeur : valorise les propriétés
+        /// </summary>
+        /// <param name="idmotif"></param>
+        /// <param name="libelle"></param>
+        public Motif(int idmotif, string libelle)
+        {
+            this.idmotif = idmotif;
+            this.libelle = libelle;
+        }
+    }
+}
diff --git a/MediaTek86/modele/Personnel.cs b/MediaTek86/modele/Personnel.cs
new file mode 100644
index 0000000..502df60
--- /dev/null
+++ b/MediaTek86/modele/Personnel.cs
@@ -0,0 +1,38 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace MediaTek86.modele
+{
+    class Personnel
+    {
+        // Déclaration des propriétés
+        private int idpersonnel;
+        private string nom;
+        private string prenom;
+        private string tel;
+        private string mail;
+        private int idservice;
+
+        /// <summary>
+        /// Constructeur : valorise les propriétés
+        /// </summary>
+        /// <param name="idpersonnel"></param>
+        /// <param name="nom"></param>
+        /// <param name="prenom"></param>
+        /// <param name="tel"></param>
+        /// <param name="mail"></param>
+        /// <param name="idservice"></param>
+        public Personnel(int idpersonnel, string nom, string prenom, string tel, string mail, int idservice)
+        {
+            this.idpersonnel = idpersonnel;
+            this.nom = nom;
+            this.prenom = prenom;
+            this.tel = tel;
+            this.mail = mail;
+            this.idservice = idservice;
+        }
+    }
+}
diff --git a/MediaTek86/modele/Responsable.cs b/MediaTek86/modele/Responsable.cs
new file mode 100644
index 0000000..250573c
--- /dev/null
+++ b/MediaTek86/modele/Responsable.cs
@@ -0,0 +1,26 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace MediaTek86.modele
+{
+    class Responsable
+    {
+        // Déclaration des propriétés
+        private string login;
+        private string pwd;
+
+        /// <summary>
+        /// Constructeur : valorise les propriétés
+        /// </summary>
+        /// <param name="login"></param>
+        /// <param name="pwd"></param>
+        public Responsable(string login, string pwd)
+        {
+            this.login = login;
+            this.pwd = pwd;
+        }
+    }
+}
diff --git a/MediaTek86/modele/Service.cs b/MediaTek86/modele/Service.cs
new file mode 100644
index 0000000..580b261
--- /dev/null
+++ b/MediaTek86/modele/Service.cs
@@ -0,0 +1,45 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace MediaTek86.modele
+{
+    class Service
+    {
+        // Déclaration des propriétés
+        private int idservice;
+        private string nom;
+
+        /// <summary>
+        /// Retourne idService
+        /// </summary>
+        /// <returns></returns>
+        public int GetIdService()
+        {
+            return idservice;
+        }
+
+        /// <summary>
+        /// Retourne le nom
+        /// </summary>
+        /// <returns></returns>
+        public string GetNom()
+        {
+            return nom;
+        }
+
+        /// <summary>
+        /// Constructeur : valorise les propriétés
+        /// </summary>
+        /// <param name="idservice"></param>
+        /// <param name="nom"></param>
+        public Service(int idservice, string nom )
+        {
+            this.idservice = idservice;
+            this.nom = nom;
+        }
+
+    }
+}
diff --git a/MediaTek86/packages.config b/MediaTek86/packages.config
new file mode 100644
index 0000000..fa4efc4
--- /dev/null
+++ b/MediaTek86/packages.config
@@ -0,0 +1,14 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<packages>
+  <package id="BouncyCastle" version="1.8.5" targetFramework="net472" />
+  <package id="Google.Protobuf" version="3.11.4" targetFramework="net472" />
+  <package id="K4os.Compression.LZ4" version="1.1.11" targetFramework="net472" />
+  <package id="K4os.Compression.LZ4.Streams" version="1.1.11" targetFramework="net472" />
+  <package id="K4os.Hash.xxHash" version="1.0.6" targetFramework="net472" />
+  <package id="MySql.Data" version="8.0.23" targetFramework="net472" />
+  <package id="SSH.NET" version="2020.0.0" targetFramework="net472" />
+  <package id="System.Buffers" version="4.5.1" targetFramework="net472" />
+  <package id="System.Memory" version="4.5.3" targetFramework="net472" />
+  <package id="System.Numerics.Vectors" version="4.4.0" targetFramework="net472" />
+  <package id="System.Runtime.CompilerServices.Unsafe" version="4.5.2" targetFramework="net472" />
+</packages>
\ No newline at end of file
diff --git a/MediaTek86/vue/GererAbsence.cs b/MediaTek86/vue/GererAbsence.cs
index 35c9ade..8662533 100644
--- a/MediaTek86/vue/GererAbsence.cs
+++ b/MediaTek86/vue/GererAbsence.cs
@@ -12,6 +12,10 @@ namespace MediaTek86.vue
 {
     public partial class frmGererAbsence : Form
     {
+        /// <summary>
+        /// Initialisation des composants graphiques
+        /// Récupération du controleur
+        /// </summary>
         public frmGererAbsence()
         {
             InitializeComponent();
diff --git a/MediaTek86/vue/ListePersonnel.cs b/MediaTek86/vue/ListePersonnel.cs
index 2416a48..470d1dc 100644
--- a/MediaTek86/vue/ListePersonnel.cs
+++ b/MediaTek86/vue/ListePersonnel.cs
@@ -12,6 +12,10 @@ namespace MediaTek86.vue
 {
     public partial class frmListePersonnel : Form
     {
+        /// <summary>
+        /// Initialisation des composants graphiques
+        /// Récupération du controleur
+        /// </summary>
         public frmListePersonnel()
         {
             InitializeComponent();
diff --git a/MediaTek86/vue/ModificationAbsence.cs b/MediaTek86/vue/ModificationAbsence.cs
index 08e5fb8..016b9af 100644
--- a/MediaTek86/vue/ModificationAbsence.cs
+++ b/MediaTek86/vue/ModificationAbsence.cs
@@ -12,6 +12,10 @@ namespace MediaTek86.vue
 {
     public partial class frmModificationAbsence : Form
     {
+        /// <summary>
+        /// Initialisation des composants graphiques
+        /// Récupération du controleur
+        /// </summary>
         public frmModificationAbsence()
         {
             InitializeComponent();
diff --git a/MediaTek86/vue/ModificationPersonnel.cs b/MediaTek86/vue/ModificationPersonnel.cs
index 88b748f..3160a8c 100644
--- a/MediaTek86/vue/ModificationPersonnel.cs
+++ b/MediaTek86/vue/ModificationPersonnel.cs
@@ -12,6 +12,10 @@ namespace MediaTek86.vue
 {
     public partial class frmModificationPersonnel : Form
     {
+        /// <summary>
+        /// Initialisation des composants graphiques
+        /// Récupération du controleur
+        /// </summary>
         public frmModificationPersonnel()
         {
             InitializeComponent();
diff --git a/MediaTek86/vue/SeConnecter.cs b/MediaTek86/vue/SeConnecter.cs
index efab466..240f588 100644
--- a/MediaTek86/vue/SeConnecter.cs
+++ b/MediaTek86/vue/SeConnecter.cs
@@ -1,4 +1,5 @@
-﻿using System;
+﻿using MediaTek86.modele;
+using System;
 using System.Collections.Generic;
 using System.ComponentModel;
 using System.Data;
@@ -12,9 +13,15 @@ namespace MediaTek86.vue
 {
     public partial class frmSeConnecter : Form
     {
+        /// <summary>
+        /// Initialisation des composants graphiques
+        /// Récupération du controleur
+        /// </summary>
         public frmSeConnecter()
         {
             InitializeComponent();
         }
+
+    
     }
 }
-- 
2.49.0.windows.1

